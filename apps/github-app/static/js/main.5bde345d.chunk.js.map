{"version":3,"sources":["redux/slices/genericsSlice.js","redux/slices/index.js","components/Button/index.js","components/TopHeader/index.js","components/Input/index.js","components/Card/index.js","pages/Home/index.js","App.js","index.js"],"names":["pjson","require","genericsSlice","createSlice","name","initialState","loading","error","success","icon","text","button","label","action","version","picture","id","dados","type","reload","reducers","initLoading","state","endLoading","setError","reducer","payload","message","prepare","unsetError","setSuccess","setReload","unsetSuccess","setPicture","actions","combineReducers","genericReducer","Button","onClickHandler","rounded","size","iconSize","style","className","onClick","TopHeader","faBars","position","left","alert","Input","placeholder","color","Card","children","Home","faSearch","store","configureStore","devTools","middleware","getDefaultMiddleware","thunk","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5bde345d.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nconst pjson = require(\"../../../package.json\");\r\n\r\nconst genericsSlice = createSlice({\r\n  name: \"generic\",\r\n  initialState: {\r\n    loading: true,\r\n    error: false,\r\n    success: false,\r\n    icon: \"AlertCircle\",\r\n    text: \"\",\r\n    button: {\r\n      label: \"Voltar\",\r\n      action: \"\",\r\n    },\r\n    version: pjson.version,\r\n    picture: { id: null, dados: null, type: null },\r\n    reload: false,\r\n  },\r\n  reducers: {\r\n    initLoading: (state, action) => {\r\n      state.loading = true;\r\n    },\r\n\r\n    endLoading: (state, action) => {\r\n      state.loading = false;\r\n    },\r\n\r\n    setError: {\r\n      reducer(state, action) {\r\n        state.error = action.payload.message;\r\n        state.text = action.payload.text;\r\n        state.icon = action.payload.icon;\r\n        state.button = action.payload.button;\r\n      },\r\n      prepare({ message, text, icon, button }) {\r\n        return { payload: { message, text, icon, button } };\r\n      },\r\n    },\r\n\r\n    unsetError: (state, action) => {\r\n      state.error = false;\r\n    },\r\n\r\n    setSuccess: {\r\n      reducer(state, action) {\r\n        state.success = action.payload.message;\r\n        state.text = action.payload.text;\r\n        state.icon = action.payload.icon;\r\n        state.button = action.payload.button;\r\n      },\r\n      prepare({ message, text, icon, button }) {\r\n        return { payload: { message, text, icon, button } };\r\n      },\r\n    },\r\n\r\n    setReload: {\r\n      reducer(state, action) {\r\n        state.reload = action.payload.reload;\r\n      },\r\n      prepare(reload) {\r\n        return { payload: { reload } };\r\n      },\r\n    },\r\n\r\n    unsetSuccess: (state, action) => {\r\n      state.success = false;\r\n    },\r\n\r\n    setPicture: {\r\n      reducer(state, action) {\r\n        state.picture = action.payload.picture;\r\n      },\r\n      prepare(picture) {\r\n        return { payload: { picture } };\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  initLoading,\r\n  endLoading,\r\n  setError,\r\n  unsetError,\r\n  setSuccess,\r\n  unsetSuccess,\r\n  setPicture,\r\n  setReload,\r\n} = genericsSlice.actions;\r\n\r\nexport default genericsSlice.reducer;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport genericReducer from \"./genericsSlice\";\r\n\r\nexport default combineReducers({\r\n  genericReducer,\r\n});\r\n","import React from \"react\";\r\nimport \"./styles.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst Button = ({\r\n  label,\r\n  onClickHandler,\r\n  rounded = false,\r\n  state = \"default\",\r\n  size = \"default\",\r\n  iconSize='lg',\r\n  style,\r\n  icon,\r\n}) => {\r\n  return (\r\n    <button\r\n      className={`button state-${state} size-${size} ${\r\n        rounded ? \"rounded\" : \"\"\r\n      }`}\r\n      onClick={() => onClickHandler()}\r\n      style={style}\r\n    >\r\n      {!!label && label}\r\n      {!!icon && <FontAwesomeIcon icon={icon} size={iconSize} />}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport \"./styles.scss\";\r\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Button from '../Button';\r\n\r\n\r\nconst TopHeader = () => {\r\n  return (\r\n    <div className=\"top-header\">\r\n        <Button\r\n          icon={faBars}\r\n          rounded\r\n          state=\"default\"\r\n          size=\"big\"\r\n          style={{position: 'absolute', left: '1.5em'}}\r\n          onClickHandler={() => alert(\"Clicou no botão!\")}\r\n        />\r\n        <div className=\"title\">Github App</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopHeader;\r\n","import React from \"react\";\r\nimport \"./styles.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst Input = ({ placeholder, icon, iconSize }) => {\r\n  return (\r\n    <div className=\"input-container\">\r\n      <input type=\"text\" className=\"input\" placeholder={placeholder} />\r\n      {icon && (\r\n        <FontAwesomeIcon\r\n          icon={icon}\r\n          size={iconSize}\r\n          className=\"input-icon\"\r\n          color=\"gray\"\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport \"./styles.scss\";\r\n\r\nconst Card = ({ children }) => {\r\n  return (\r\n    <div className=\"card-container\">\r\n      <div className=\"card\">{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport { Button, TopHeader, Input, Card } from \"../../components\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <TopHeader />\r\n\r\n      <Input\r\n        placeholder=\"Digite o nome de um usuário para realizar a busca\"\r\n        icon={faSearch}\r\n        iconSize=\"lg\"\r\n      />\r\n\r\n      <Card />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport reducers from \"./redux/slices\";\nimport thunk from \"redux-thunk\";\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport \"./assets/styles/index.scss\";\nimport { Home as HomePage } from \"./pages\";\n\nconst store = configureStore({\n  reducer: reducers,\n  devTools: true,\n  middleware: [...getDefaultMiddleware(), thunk],\n});\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <HomePage />\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}